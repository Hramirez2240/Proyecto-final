@page  "/Agregar-cli"
@using Models
@using Proyecto_final.Services
@using System.Threading.Tasks
@using System.Net.Http
@using System.Linq
@using Microsoft.AspNetCore.Components
@inject HttpClient http
@inject ICargarArchivo cargarArchivo
@inject NavigationManager NavigationManager


<div class="container">
    <h1 style="text-align: center;" class="mt-2 col-md-12 pt-2 mb-4">Agregar Clientes</h1>
    <br /><br />
    <button id="boton1" type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
        Agregar
    </button>

    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Agregando el CLiente</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="text" placeholder="Cedula" @bind="cedula" class="form-control" />
                    <button class="btn btn-primary" @onclick="buscar"> Buscar Cliente </button>
                    <input type="text" placeholder="Nombre:" @bind="nombre" class="form-control" />
                    <input type="text" placeholder="Apellido:" @bind="Apellido" class="form-control" />
                    <BlazorInputFile.InputFile OnChange="HandleFileSelected" multiple accept=".jpg, .jpeg, .png" />
                    <input type="text" @bind="ft1" class="form-control" />
                    <input type="text" placeholder="Nacionalidad:" @bind="nacionalidad" class="form-control" />
                    <input type="text" placeholder="Correo" @bind="correo" class="form-control" />

                    <select @bind="sangre" class="form-control">
                        <option value="" disabled selected hidden>Tipo de sangre</option>
                        <option value="A+">A+</option>
                        <option value="A-">A-</option>
                        <option value="B+">B+</option>
                        <option value="B-">B-</option>
                        <option value="O+">O+</option>
                        <option value="O-">O-</option>
                        <option value="AB+">AB+</option>
                        <option value="AB-">AB-</option>
                    </select>



                    @if (file != null)
                    {
                        <label>Nombre foto: @file.Name</label>
                    }

                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" @onclick="AgregarCliente">Agregar</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    @if (mensaje == 1)
                    {
                        <div class="alert alert-success" role="alert">Cliente agregado correctamente</div>
                    }
                </div>
            </div>
        </div>
    </div>

    <br /><br />
    <hr>
    <div class="container" id="carta">
        @if (lista_cliente != null)
        {
            @foreach (var ve in lista_cliente)
            {
                <div class="card" style="width: 20rem;  height: 40rem;">
                    <img src="./imagenes/@ve.Ft2" class="card-img-top">
                    <img src="@ft1 " class="card-img-top"/>
                    <div class="card-body">
                        @if (ve.Habilitar == "Disponible")
                        {
                            <h5 class="card-title" style="color: green;">Disponible</h5>
                        }

                        else if (ve.Habilitar == "No disponible")
                        {
                            <h5 class="card-title" style="color: red;">No disponible</h5>
                        }


                        <label><strong> Nombre </strong> @ve.Nombre</label>
                        <label><strong> Apellido </strong> @ve.Apellido</label>
                        <label><strong> Cedula </strong>Cedula @ve.Cedula</label>
                        <label><strong> Nacionalidad </strong> @ve.Nacionalidad</label>
                        <label><strong> Correo </strong> @ve.Correo</label>
                        <label><strong> Licencia </strong> @ve.Licencia</label>
                        <label><strong> Sangre </strong> @ve.Sangre</label>
                        @if (ve.Habilitar == "Disponible")
                        {
                            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modal2" @onclick="(() => Editar(ve.Id))">
                                Editar
                            </button>
                        }
                        else if (ve.Habilitar == "No disponible")
                        {
                            <button disabled type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modal2" @onclick="(() => Editar(ve.Id))">
                                Editar
                            </button>
                        }

                        <div class="modal fade" id="modal2" tabindex="-1" aria-labelledby="modal2Label" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="modal2Label">Editando cliente</h5>
                                    </div>
                                    <div class="modal-body">
                                        <input type="text" placeholder="Cedula" @bind="cedula" class="form-control" />
                                        <input type="text" placeholder="Nombre:" @bind="nombre" class="form-control" />
                                        <input type="text" placeholder="Apellido:" @bind="Apellido" class="form-control" />
                                        <input type="text" placeholder="Nacionalidad:" @bind="nacionalidad" class="form-control" />
                                        <input type="text" placeholder="Correo" @bind="correo" class="form-control" />
                                        <input type="text" placeholder="Correo" @bind="licencia" class="form-control" />


                                        <select @bind="sangre" class="form-control">
                                            <option value="" disabled selected hidden>Tipo de sangre</option>
                                            <option value="A+">A+</option>
                                            <option value="A-">A-</option>
                                            <option value="B+">B+</option>
                                            <option value="B-">B-</option>
                                            <option value="O+">O+</option>
                                            <option value="O-">O-</option>
                                            <option value="AB+">AB+</option>
                                            <option value="AB-">AB-</option>
                                        </select>


                                    </div>
                                    <div class="modal-footer">
                                        <button class="btn btn-primary" @onclick="GuardarCambios">Guardar cambios</button>
                                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal" @onclick="Cerrar">Cerrar</button>
                                        @if (mensaje == 1)
                                        {
                                            <div class="alert alert-success" role="alert">Cambios realizados correctamente</div>
                                        }

                                    </div>
                                </div>
                            </div>
                        </div>
                        <button class="btn btn-danger" @onclick="(() => Deshabilitar(ve.Id))">Deshabilitar</button>

                    </div>
                </div>
            }
        }

    </div> 
</div>


@code{
    Data.DatosCedula dc = new Data.DatosCedula();
    IFileListEntry file;

    async Task HandleFileSelected(IFileListEntry[] files)
    {
        file = files.FirstOrDefault();

        if (file != null)
        {
            await cargarArchivo.Cargar(file);
        }
    }

    string cedula = "", Apellido = "", nombre = "", correo = "", licencia = "";
    string nacionalidad = "", sangre = "", ft1 = "", ft2 = "";



    int mensaje = 0;

    public List<Cliente> lista_cliente = new List<Cliente>();
    public List<Cliente> GetCliente() => new db_a72daa_proyecContext().Cliente.ToList();

    public void AgregarCliente()
    {
        using (db_a72daa_proyecContext context = new db_a72daa_proyecContext())
        {
            Cliente ve = new Cliente();
            ve.Cedula = cedula;
            ve.Nombre = nombre;
            ve.Apellido = Apellido;
            ve.Nacionalidad = nacionalidad;
            ve.Correo = correo;
            ve.Sangre = sangre;
            ve.Licencia = licencia;
            ve.Ft1 = ft1;
            ve.Ft2 = file.Name;


            context.Add(ve);
            context.SaveChanges();
        }

        mensaje = 1;
    }
    public void buscar()
    {
        var Cd = dc.Datos(cedula);
        nombre = Cd.Nombres;
        Apellido = Cd.Apellido1;
        ft1 = Cd.foto;

    }
    public void Editar(int id)
    {
        using (db_a72daa_proyecContext contexto = new db_a72daa_proyecContext())
        {
            var datos = contexto.Cliente.Find(id);
            cedula = datos.Cedula;
            nombre = datos.Nombre;
            Apellido = datos.Apellido;
            licencia = datos.Licencia;
            nacionalidad = datos.Nacionalidad;
            correo = datos.Correo;
            sangre = datos.Sangre;



        }
    }
    public void GuardarCambios()
    {
        using (db_a72daa_proyecContext context = new db_a72daa_proyecContext())
        {
            Cliente ve = context.Cliente
            .Where(e => e.Cedula == cedula).FirstOrDefault();

            ve.Cedula = cedula;
            ve.Nombre = nombre;
            ve.Apellido = Apellido;
            ve.Nacionalidad = nacionalidad;
            ve.Correo = correo;
            ve.Sangre = sangre;
            ve.Licencia = licencia;


            context.SaveChanges();
        }

        Limpiar();
        mensaje = 1;
    }


    protected override void OnInitialized()
    {
        lista_cliente = GetCliente();
    }

    public void Limpiar()
    {
        cedula = "";
        Apellido = "";
        nombre = "";
        correo = "";
        licencia = "";
        nacionalidad = "";
        sangre = "";
        ft1 = "";
        ft2 = "";

    }


    public void Deshabilitar(int id)
    {
        using (db_a72daa_proyecContext context = new db_a72daa_proyecContext())
        {
            var des = context.Cliente.Find(id);
            des.Habilitar = "No disponible";

            context.SaveChanges();

            Recargar();
        }

    }
    public void Cerrar()
    {
        Recargar();
    }

    public void Recargar()
    {
        NavigationManager.NavigateTo("/Agregar-cli", true);
    }

}

